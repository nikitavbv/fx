on: [push]

name: run tests

jobs:
  test:
    name: run tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: Swatinem/rust-cache@v2
    - run: |
        if ! command -v just &> /dev/null
        then
          cargo install just
        fi
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: wasm32-unknown-unknown
    - run: just test
  runtime-build:
    name: runtime build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: test
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: Swatinem/rust-cache@v2
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p fx-runtime --release
    - uses: docker/setup-buildx-action@v2
    - uses: docker/login-action@v2
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      with:
        file: Dockerfile
        context: '.'
        push: true
        tags: |
          ghcr.io/nikitavbv/fx/fx:latest
          ghcr.io/nikitavbv/fx/fx:0.1.${{ github.run_number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - uses: actions/upload-artifact@v4
      with:
        name: release-build
        path: target/release/fx-runtime
  runtime-build-arm64:
    name: runtime build arm64
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: test
    env:
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER: /usr/bin/aarch64-linux-gnu-gcc
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: aarch64-unknown-linux-musl
    - uses: Swatinem/rust-cache@v2
    - run: sudo apt install gcc-aarch64-linux-gnu
    - run: |
        if ! command -v just cross /dev/null
        then
          cargo install cross --git https://github.com/cross-rs/cross
        fi
    - run: cross build -p fx-runtime --release --target aarch64-unknown-linux-musl
